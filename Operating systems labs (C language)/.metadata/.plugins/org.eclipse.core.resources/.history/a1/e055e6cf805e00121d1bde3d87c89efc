#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>

int Id;
int *PRAVO;
int *ZASTAVICA;

void kriticni_odsjecak (int i, int j);
void kriticni_odsjecak_izlaz (int i, int j);

void Proces (int i){
     int k,m,j;
     if (i==0){
        j=1;
        }
     else if (i==1){
          j=0;
          }
     for (k=1;k<=5;k++){
         kriticni_odsjecak (i,j);
         for (m=1;m<=5;m++){
             printf("Proces: %d, K.O. br: %d, (%d/5)\n",i+1,k,m);
             sleep(1);
             }
         kriticni_odsjecak_izlaz (i,j);
         }
     }

void kriticni_odsjecak (int i, int j){
     ZASTAVICA[i]=1;
     while(ZASTAVICA[j]!=0){
        if (*PRAVO==j){
            ZASTAVICA[i]=0;
            while (*PRAVO==j);
            ZASTAVICA[i]=1;
            }
        }
     }

void kriticni_odsjecak_izlaz (int i, int j){
     *PRAVO=j;
     ZASTAVICA[i]=0;
     }

void brisi (int sig){
     (void) shmdt((char *) PRAVO);
     (void) shmdt((char *) ZASTAVICA);
     (void) shmctl(Id, IPC_RMID, NULL);
     exit(0);
     }

int main(int argc, char *argv[])
{
    int i;
    Id= shmget(IPC_PRIVATE, sizeof(int)*100, 0600);
    if (Id==-1)
    exit(1);
    PRAVO=(int *) shmat(Id, NULL, 0);
    *PRAVO=0;
    ZASTAVICA=(int *) shmat(Id, NULL, 0)+1;
    for (i=0;i<2;i++){
        ZASTAVICA[i]=0;
        }
    sigset (SIGINT, brisi);
    for (i=0;i<2;i++){
        switch(fork()){
           case -1:
                printf("Ne moze se stvoriti novi proces!\n");
                exit(0);
           case 0:
                Proces(i);
                exit(0);
           default:
                   break;
           }
        }
       for (i=0;i<2;i++){
           wait(NULL);
           }
  return 0;
}
